//  Copyright (c) 2007 Hewlett-Packard development company llc
//
//  All rights reserved.
//
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are met:
//
//  - Redistributions of source code must retain the above copyright notice,
//  this list of conditions and the disclaimer below.
//
//  - Redistributions in binary form must reproduce the above copyright notice,
//  this list of conditions and the disclaimer below in the documentation and/or
//  other materials provided with the distribution. Unless a specific license is granted
//  to te licencee
//
//  HP's name may not be used to endorse or promote products derived from
//  this software without specific prior written permission.
//
//  DISCLAIMER:  THIS SOFTWARE IS PROVIDED BY HP "AS IS" AND ANY EXPRESS OR
//  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
//  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
//  DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,
//  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
//  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
//  OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
//  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
//  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
//  EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//  ----------------------------------------------------------------------------
#include "ScreenHandeling.h"
#include "VirtualLCD.h"
#include "graphics.h"
#include "HP12c.h"

unsigned int LcdData[20];
unsigned int SavedLcdData[20];

CVirtualLCD *g_pLCD;


typedef struct { int nbPoints; POINT points[66]; } TPoly  ;  
typedef struct { int nbPoly; TPoly poly[5]; } TSeg;

/*! Macros -
* 
*	These Macros are defined to create segments on a bitmap for CopyToClipboard feature
*	
*	
*
*
*/


/*#define U(n) 	{ 1, { 5, {  {(n-1)*27+38, 15 }, {(n-1)*27+51, 15 }, {(n-1)*27+48, 18 }, {(n-1)*27+41, 18 }, {(n-1)*27+38, 15 } } } } // put definition there top segment
#define UR(n) { 1, { 7, {  {(n-1)*27+48, 19 }, {(n-1)*27+51, 16 }, {(n-1)*27+52, 16 }, {(n-1)*27+52, 25 }, {(n-1)*27+50, 27 }, {(n-1)*27+48, 25 }, {(n-1)*27+48, 19 } } } } // put definition there top segment
#define BR(n) { 1, { 6, {  {(n-1)*27+49, 27 }, {(n-1)*27+50, 28 }, {(n-1)*27+51, 28 }, {(n-1)*27+50, 39 }, {(n-1)*27+47, 35 }, {(n-1)*27+47, 29 } } } } //LR
#define B(n)  { 1, { 7, {  {(n-1)*27+40, 36 }, {(n-1)*27+47, 36 }, {(n-1)*27+49, 39 }, {(n-1)*27+49, 40 }, {(n-1)*27+37, 40 }, {(n-1)*27+37, 39 }, {(n-1)*27+39, 36 } } }}  //B
#define BL(n) { 1, { 9, {  {(n-1)*27+38, 27 }, {(n-1)*27+40, 29 }, {(n-1)*27+40, 35 }, {(n-1)*27+36, 38 }, {(n-1)*27+37, 38 }, {(n-1)*27+37, 38 }, {(n-1)*27+36, 38 }, {(n-1)*27+36, 28 }, {(n-1)*27+38, 27 } } } } //LL
#define UL(n)	{ 1, { 8, {  {(n-1)*27+38, 16 }, {(n-1)*27+41, 19 }, {(n-1)*27+40, 24 }, {(n-1)*27+39, 26 }, {(n-1)*27+37, 26 }, {(n-1)*27+36, 25 }, {(n-1)*27+36, 17 }, {(n-1)*27+38, 16 } } } } //UL
#define M(n)  { 1, { 7, {  {(n-1)*27+38, 27 }, {(n-1)*27+40, 25 }, {(n-1)*27+47, 25 }, {(n-1)*27+50, 27 }, {(n-1)*27+47, 29 }, {(n-1)*27+41, 29 }, {(n-1)*27+38, 26 } } } } //M
*/
#define XSHIFT 13
#define VShift -37
#define VSHRINK 2
#define U(n)	{ 1, { 6,{{(n-1)*27+XSHIFT+25, 50 +VShift},  {(n-1)*27+XSHIFT+26, 49 +VShift},  {(n-1)*27+XSHIFT+35, 49 +VShift},  {(n-1)*27+XSHIFT+36, 50 +VShift},  {(n-1)*27+XSHIFT+33, 53 +VShift},  {(n-1)*27+XSHIFT+27, 53 +VShift}	} } } // put definition there top segment
#define UR(n)	{ 1, { 6,{{(n-1)*27+XSHIFT+35, 54 +VShift},  {(n-1)*27+XSHIFT+37, 52 +VShift},  {(n-1)*27+XSHIFT+38, 54 +VShift},  {(n-1)*27+XSHIFT+38, 61 +VShift-VSHRINK},  {(n-1)*27+XSHIFT+37, 63 +VShift-VSHRINK},  {(n-1)*27+XSHIFT+35, 61 +VShift-VSHRINK}	} } } // put definition there top segment
#define BR(n)   { 1, { 9,{{(n-1)*27+XSHIFT+34, 68 +VShift-VSHRINK},  {(n-1)*27+XSHIFT+35, 67 +VShift-VSHRINK},  {(n-1)*27+XSHIFT+36, 66 +VShift-VSHRINK},  {(n-1)*27+XSHIFT+37, 67 +VShift-VSHRINK},  {(n-1)*27+XSHIFT+37, 76 +VShift-VSHRINK-VSHRINK},  {(n-1)*27+XSHIFT+36, 77 +VShift-VSHRINK-VSHRINK},  {(n-1)*27+XSHIFT+35, 78 +VShift-VSHRINK-VSHRINK},  {(n-1)*27+XSHIFT+34, 77 +VShift-VSHRINK-VSHRINK},  {(n-1)*27+XSHIFT+34, 70 +VShift-VSHRINK-VSHRINK}	} } } // put definition there top segment
#define B(n)    { 1, { 7,{{(n-1)*27+XSHIFT+23, 79 +VShift-VSHRINK-VSHRINK},  {(n-1)*27+XSHIFT+25, 77 +VShift-VSHRINK-VSHRINK},  {(n-1)*27+XSHIFT+31, 77 +VShift-VSHRINK-VSHRINK},  {(n-1)*27+XSHIFT+32, 78 +VShift-VSHRINK-VSHRINK},  {(n-1)*27+XSHIFT+33, 79 +VShift-VSHRINK-VSHRINK},  {(n-1)*27+XSHIFT+32, 80 +VShift-VSHRINK-VSHRINK},  {(n-1)*27+XSHIFT+24, 80 +VShift-VSHRINK-VSHRINK}	} } } // put definition there top segment
#define BL(n)   { 1, { 6,{{(n-1)*27+XSHIFT+21, 68 +VShift-VSHRINK},  {(n-1)*27+XSHIFT+21, 75 +VShift-VSHRINK-VSHRINK},  {(n-1)*27+XSHIFT+22, 77 +VShift-VSHRINK-VSHRINK},  {(n-1)*27+XSHIFT+24, 75 +VShift-VSHRINK-VSHRINK},  {(n-1)*27+XSHIFT+24, 68 +VShift-VSHRINK},  {(n-1)*27+XSHIFT+22, 66 +VShift-VSHRINK}	} } } // put definition there top segment
#define UL(n)	{ 1, { 6,{{(n-1)*27+XSHIFT+23, 62 +VShift-VSHRINK},  {(n-1)*27+XSHIFT+25, 60 +VShift-VSHRINK},  {(n-1)*27+XSHIFT+25, 54 +VShift},  {(n-1)*27+XSHIFT+23, 52 +VShift},  {(n-1)*27+XSHIFT+22, 53 +VShift},  {(n-1)*27+XSHIFT+22, 61 +VShift-VSHRINK}	} } } // put definition there top segment
#define M(n)    { 1, { 8,{{(n-1)*27+XSHIFT+24, 64 +VShift-VSHRINK},  {(n-1)*27+XSHIFT+24, 65 +VShift-VSHRINK},  {(n-1)*27+XSHIFT+25, 66 +VShift-VSHRINK},  {(n-1)*27+XSHIFT+33, 66 +VShift-VSHRINK},  {(n-1)*27+XSHIFT+34, 65 +VShift-VSHRINK},  {(n-1)*27+XSHIFT+34, 64 +VShift-VSHRINK},  {(n-1)*27+XSHIFT+33, 63 +VShift-VSHRINK},  {(n-1)*27+XSHIFT+25, 63 +VShift-VSHRINK}	} } } // put definition there top segment

#define D(n) { 1, { 10, {{(n-1)*27+55, 35 }, {(n-1)*27+57, 35 }, {(n-1)*27+58, 35 }, {(n-1)*27+59, 36 }, {(n-1)*27+59, 38 }, {(n-1)*27+58, 39 }, {(n-1)*27+55, 39 }, {(n-1)*27+54, 38 }, {(n-1)*27+54, 36 }, {(n-1)*27+55, 35 } } } }
#define CVSHIFT 29
#define C(n) { 1, { 6, {{(n-1)*27+42+12,11+CVSHIFT}, {(n-1)*27+42+11,12+CVSHIFT}, {(n-1)*27+42+10,15+CVSHIFT}, {(n-1)*27+42+13,14+CVSHIFT}, {(n-1)*27+42+15,12+CVSHIFT}, {(n-1)*27+42+13,12+CVSHIFT} } } }
#define STAR { 1, { 14, {{21, 46 }, {21, 48 }, {23, 48 }, {24, 48 }, {23, 49 }, {24, 51 }, {22, 50 }, {21, 53 }, {20, 50 }, {17, 51 }, {20, 49 }, {18, 47 }, {18, 47 }, {20, 48 }, } } }
/*#define USER { 4, {{ 8, {{49, 46 }, {49, 52 }, {51, 53 }, {53, 52 }, {53, 46 }, {53, 51 }, {51, 53 }, {49, 52 }, } } ,\
                  { 11, {  {60, 47 }, {59, 46 }, {57, 46 }, {56, 47 }, {57, 48 }, {60, 49 }, {60, 50 }, {60, 52 }, {59, 53 }, {57, 53 }, {56, 51 }, } } ,\
                  { 10, {  {67, 46 }, {62, 46 }, {63, 53 }, {67, 53 }, {62, 53 }, {62, 49 }, {67, 49 }, {63, 49 }, {63, 47 }, {63, 46 }, } } ,\
                  { 12, {  {70, 53 }, {70, 46 }, {74, 46 }, {75, 47 }, {75, 48 }, {74, 49 }, {71, 49 }, {74, 49 }, {74, 50 }, {75, 53 }, {74, 49 }, {70, 49 }, } } }}
*/
#define USER { 4, { { 10, {{49, 46 }, {49, 52 }, {50, 53 }, {52, 53 }, {53, 52 }, {53, 46 }, {53, 52 }, {52, 53 }, {50, 53 }, {49, 52 }, } }, \
                    { 21, {  {60, 47 }, {59, 46 }, {57, 46 }, {56, 47 }, {56, 48 }, {60, 50 }, {60, 52 }, {59, 53 }, {57, 53 }, {56, 52 }, {57, 53 }, {59, 53 }, {60, 52 }, {60, 50 }, {59, 49 }, {58, 49 }, {57, 48 }, {56, 48 }, {56, 47 }, {57, 46 }, {59, 46 }, } }, \
                    { 9, {  {67, 46 }, {63, 46 }, {63, 53 }, {67, 53 }, {63, 53 }, {63, 49 }, {66, 49 }, {63, 49 }, {63, 46 }, } }, \
                    { 15, {  {70, 53 }, {70, 46 }, {74, 46 }, {75, 47 }, {75, 49 }, {74, 49 }, {73, 50 }, {74, 53 }, {73, 49 }, {71, 49 }, {75, 49 }, {75, 46 }, {70, 46 }, {70, 49 }, {70, 49 } } } } }

#define F { 1, { 10, {{93, 53 }, {93, 46 }, {94, 45 }, {95, 45 }, {94, 45 }, {93, 46 }, {93, 48 }, {94, 48 }, {92, 48 }, {93, 48 }, } } ,}
#define G { 1, {{ 20, {{109, 54 }, {110, 55 }, {113, 55 }, {114, 54 }, {114, 48 }, {113, 47 }, {110, 47 }, {109, 48 }, {109, 50 }, {110, 51 }, {113, 51 }, {110, 51 }, {109, 50 }, {109, 48 }, {110, 47 }, {113, 47 }, {114, 48 }, {114, 54 }, {113, 55 }, {110, 55 }, } } ,} ,}
#define BEGIN { 5, {{ 20, {{124, 46 }, {124, 53 }, {128, 53 }, {129, 51 }, {129, 50 }, {127, 49 }, {124, 49 }, {128, 49 }, {129, 48 }, {129, 46 }, {124, 46 }, {129, 46 }, {129, 48 }, {128, 49 }, {124, 49 }, {128, 49 }, {129, 50 }, {129, 52 }, {128, 53 }, {124, 53 }, } } ,{ 11, {  {132, 46 }, {132, 53 }, {136, 53 }, {132, 53 }, {132, 50 }, {132, 49 }, {136, 49 }, {132, 49 }, {132, 46 }, {136, 46 }, {132, 46 }, } } ,{ 20, {  {143, 47 }, {142, 46 }, {139, 46 }, {138, 47 }, {138, 52 }, {139, 53 }, {142, 53 }, {143, 51 }, {143, 50 }, {143, 49 }, {140, 49 }, {143, 49 }, {143, 51 }, {142, 52 }, {142, 53 }, {139, 53 }, {138, 52 }, {138, 47 }, {139, 46 }, {142, 46 }, } } ,{ 2, {  {146, 46 }, {146, 53 }, } } ,{ 10, {  {149, 53 }, {149, 46 }, {150, 46 }, {153, 53 }, {154, 53 }, {154, 46 }, {154, 53 }, {153, 53 }, {150, 46 }, {149, 46 }, } } ,  }}
#define GR { 1, { 20, {  {182, 47 }, {181, 46 }, {178, 46 }, {177, 47 }, {177, 52 }, {178, 53 }, {180, 53 }, {182, 51 }, {182, 49 }, {179, 49 }, {182, 49 }, {182, 51 }, {181, 52 }, {180, 53 }, {178, 53 }, {177, 52 }, {177, 47 }, {178, 46 }, {181, 46 }, {182, 47 }, } } ,}
#define RAD { 3, {{ 17, {{184, 53 }, {184, 46 }, {188, 46 }, {189, 47 }, {189, 49 }, {188, 50 }, {185, 50 }, {188, 50 }, {189, 53 }, {188, 50 }, {185, 50 }, {188, 50 }, {189, 49 }, {189, 47 }, {188, 46 }, {184, 46 }, {184, 53 }, } } ,{ 9, {  {191, 53 }, {194, 46 }, {192, 50 }, {196, 50 }, {194, 46 }, {196, 50 }, {197, 53 }, {196, 50 }, {192, 50 }, } } ,{ 13, {  {199, 53 }, {199, 46 }, {202, 46 }, {204, 47 }, {204, 52 }, {203, 53 }, {199, 53 }, {203, 53 }, {204, 52 }, {204, 47 }, {203, 46 }, {199, 46 }, {199, 53 }, } } ,}}
#define DMY {3, {{ 12, {{211, 53 }, {211, 46 }, {215, 46 }, {216, 47 }, {216, 52 }, {215, 53 }, {211, 53 }, {215, 53 }, {216, 52 }, {216, 47 }, {215, 46 }, {211, 46 }, } } ,\
                { 8, {  {221, 53 }, {221, 46 }, {224, 49 }, {227, 46 }, {227, 53 }, {227, 47 }, {224, 50 }, {221, 47 }, } } ,\
                { 8, {  {230, 46 }, {232, 49 }, {232, 53 }, {233, 53 }, {233, 49 }, {235, 46 }, {233, 49 }, {232, 49 }, } }  ,}}
#define CC { 1, { 21, {  {253, 48 }, {252, 46 }, {250, 46 }, {248, 47 }, {248, 49 }, {248, 51 }, {249, 53 }, {251, 53 }, {253, 52 }, {253, 51 }, {253, 52 }, {252, 52 }, {251, 53 }, {249, 53 }, {248, 52 }, {248, 47 }, {249, 46 }, {252, 46 }, {252, 47 }, {253, 47 }, {253, 48 }, } } ,}
#define PRGM { 4, {{ 15, {{267, 53 }, {267, 46 }, {270, 46 }, {271, 48 }, {271, 49 }, {270, 51 }, {267, 51 }, {270, 51 }, {270, 50 }, {271, 49 }, {271, 48 }, {270, 47 }, {270, 46 }, {267, 46 }, {267, 53 }, } } ,{ 15, {  {274, 53 }, {274, 46 }, {277, 46 }, {278, 47 }, {278, 48 }, {278, 49 }, {277, 49 }, {274, 49 }, {277, 50 }, {277, 53 }, {277, 49 }, {278, 49 }, {278, 47 }, {277, 46 }, {274, 46 }, } } ,{ 22, {  {285, 47 }, {284, 46 }, {281, 46 }, {280, 47 }, {280, 52 }, {281, 53 }, {284, 53 }, {284, 52 }, {285, 51 }, {285, 50 }, {283, 50 }, {282, 50 }, {285, 50 }, {285, 51 }, {284, 52 }, {283, 53 }, {281, 53 }, {280, 52 }, {280, 47 }, {281, 46 }, {284, 46 }, {285, 47 }, } } ,{ 13, {  {288, 53 }, {288, 46 }, {289, 46 }, {291, 50 }, {293, 46 }, {294, 46 }, {294, 53 }, {294, 46 }, {293, 46 }, {292, 50 }, {289, 46 }, {288, 46 }, {288, 53 }, } } ,  }}
#define N { 0 }
// Table for LCD emulation  
TSeg const table_LCD[26*4]=
{
N, UL(1),  U(1),  U(2), UL(2), UR(2), UL(3),  U(3),  U(4), UL(4), UR(4), UL(5),  U(5),  U(6), UL(6), UR(6), UL(7),  U(7),  U(8), UL(8), UR(8), UL(9),  U(9),  U(10), UL(10), UR(10),
N, BL(1),  M(1), UR(1), BL(2),  M(2), BL(3),  M(3), UR(3), BL(4),  M(4), BL(5),  M(5), UR(5), BL(6),  M(6), BL(7),  M(7), UR(7), BL(8),  M(8), BL(9),  M(9), UR(9), BL(10), M(10),
N,  B(1), BR(1),  B(2), BR(2),  D(2),  B(3), BR(3),  B(4), BR(4),  D(4),  B(5), BR(5),  B(6), BR(6),  D(6),  B(7), BR(7),  B(8), BR(8),  D(8),  B(9), BR(9),  B(10), BR(10),  D(10), 
STAR, M(0), C(1), D(1), USER, C(2), F, C(3), D(3), G, C(4), BEGIN, C(5), D(5), GR, C(6), RAD, C(7), D(7), DMY, C(8), CC, C(9), D(9), PRGM, C(10),
};
#undef U
#undef UR
#undef BR
#undef B
#undef BL
#undef UL
#undef M
#undef C
#undef D
#undef STAR
#undef F
#undef G
#undef BEGIN
#undef GR
#undef RAD
#undef CC
#undef PRGM
#undef USER
#undef DMY


#define U(n)	{ 1, { { 13, {{(n-1)*143+128, 53 }, {(n-1)*143+129, 52 }, {(n-1)*143+130, 51 }, {(n-1)*143+132, 50 }, {(n-1)*143+198, 50 }, {(n-1)*143+200, 51 }, {(n-1)*143+200, 51 }, {(n-1)*143+180, 72 }, {(n-1)*143+152, 71 }, {(n-1)*143+150, 72 }, {(n-1)*143+149, 73 }, {(n-1)*143+148, 74 }, {(n-1)*143+128, 53 } } } } }
#define UR(n)	{ 1, {{ 9, {{(n-1)*143+182, 74 }, {(n-1)*143+203, 53 }, {(n-1)*143+204, 54 }, {(n-1)*143+205, 55 }, {(n-1)*143+203, 106 }, {(n-1)*143+195, 111 }, {(n-1)*143+194, 111 }, {(n-1)*143+182, 103 }, {(n-1)*143+182, 75 } } }  } }
#define BR(n) { 1, {{ 10, {{(n-1)*143+194, 119 }, {(n-1)*143+195, 119 }, {(n-1)*143+201, 123 }, {(n-1)*143+194, 181 }, {(n-1)*143+192, 181 }, {(n-1)*143+192, 181 }, {(n-1)*143+173, 162 }, {(n-1)*143+175, 160 }, {(n-1)*143+180, 127 }, {(n-1)*143+193, 119 } } } } }
#define B(n) { 1, {{ 8, {{(n-1)*143+141, 160 }, {(n-1)*143+144, 162 }, {(n-1)*143+170, 163 }, {(n-1)*143+190, 184 }, {(n-1)*143+190, 184 }, {(n-1)*143+122, 183 }, {(n-1)*143+120, 182 }, {(n-1)*143+141, 160 } } } } }
#define BL(n) { 1, {{ 7, {{(n-1)*143+118, 178 }, {(n-1)*143+119, 179 }, {(n-1)*143+139, 158 }, {(n-1)*143+141, 126 }, {(n-1)*143+129, 117 }, {(n-1)*143+128, 117 }, {(n-1)*143+120, 122 } } } } }
#define UL(n) { 1, {{ 8, {{(n-1)*143+128, 59 }, {(n-1)*143+129, 59 }, {(n-1)*143+146, 76 }, {(n-1)*143+143, 101 }, {(n-1)*143+130, 109 }, {(n-1)*143+127, 109 }, {(n-1)*143+122, 105 }, {(n-1)*143+127, 59 } } } } }
#define M(n)  { 1, {{ 8, {{(n-1)*143+129, 113 }, {(n-1)*143+145, 103 }, {(n-1)*143+178, 103 }, {(n-1)*143+193, 114 }, {(n-1)*143+193, 117 }, {(n-1)*143+178, 124 }, {(n-1)*143+145, 124 }, {(n-1)*143+129, 114 } } } } }
#define D(n) { 1, {{ 28, {{(n-1)*143+216, 163 }, {(n-1)*143+217, 162 }, {(n-1)*143+219, 160 }, {(n-1)*143+220, 159 }, {(n-1)*143+221, 159 }, {(n-1)*143+224, 159 }, {(n-1)*143+234, 159 }, {(n-1)*143+236, 159 }, {(n-1)*143+237, 160 }, {(n-1)*143+239, 161 }, {(n-1)*143+241, 163 }, {(n-1)*143+241, 164 }, {(n-1)*143+241, 177 }, {(n-1)*143+241, 179 }, {(n-1)*143+240, 180 }, {(n-1)*143+239, 181 }, {(n-1)*143+238, 182 }, {(n-1)*143+237, 183 }, {(n-1)*143+236, 183 }, {(n-1)*143+235, 183 }, {(n-1)*143+234, 184 }, {(n-1)*143+233, 184 }, {(n-1)*143+232, 184 }, {(n-1)*143+220, 185 }, {(n-1)*143+217, 181 }, {(n-1)*143+215, 180 }, {(n-1)*143+215, 179 }, {(n-1)*143+214, 165 } } } } }
#define C(n) { 1, {{ 17, {{(n-1)*143+214, 183 }, {(n-1)*143+216, 185 }, {(n-1)*143+218, 186 }, {(n-1)*143+221, 187 }, {(n-1)*143+233, 187 }, {(n-1)*143+234, 187 }, {(n-1)*143+235, 186 }, {(n-1)*143+235, 186 }, {(n-1)*143+235, 188 }, {(n-1)*143+212, 208 }, {(n-1)*143+210, 208 }, {(n-1)*143+208, 208 }, {(n-1)*143+206, 207 }, {(n-1)*143+205, 206 }, {(n-1)*143+204, 204 }, {(n-1)*143+204, 201 }, {(n-1)*143+214, 183 } } } } }
#define STAR { 1, {{ 33, {{33, 219 }, {41, 219 }, {40, 233 }, {41, 234 }, {42, 234 }, {52, 226 }, {53, 226 }, {57, 231 }, {56, 233 }, {44, 238 }, {44, 239 }, {44, 240 }, {56, 246 }, {56, 248 }, {55, 250 }, {53, 252 }, {41, 244 }, {40, 245 }, {41, 259 }, {34, 259 }, {35, 245 }, {34, 244 }, {33, 244 }, {22, 252 }, {18, 246 }, {31, 240 }, {31, 238 }, {18, 233 }, {18, 232 }, {21, 226 }, {33, 234 }, {34, 234 }, {33, 219 } } } } }
#define USER { 4, {{ 32, {{184, 219 }, {184, 247 }, {185, 250 }, {186, 253 }, {188, 256 }, {190, 258 }, {192, 260 }, {196, 260 }, {200, 261 }, {202, 261 }, {205, 260 }, {207, 259 }, {210, 258 }, {211, 257 }, {212, 255 }, {213, 253 }, {214, 252 }, {215, 251 }, {215, 249 }, {215, 219 }, {208, 219 }, {208, 249 }, {206, 250 }, {205, 251 }, {203, 252 }, {202, 253 }, {197, 253 }, {195, 252 }, {193, 250 }, {192, 247 }, {192, 219 }, {184, 219 }, } } ,\
{ 64, {  {253, 231 }, {253, 227 }, {252, 225 }, {250, 222 }, {248, 219 }, {245, 218 }, {243, 218 }, {232, 218 }, {229, 219 }, {226, 223 }, {225, 225 }, {225, 234 }, {226, 236 }, {227, 238 }, {228, 240 }, {231, 241 }, {234, 242 }, {237, 242 }, {240, 243 }, {242, 243 }, {245, 244 }, {245, 246 }, {246, 249 }, {245, 251 }, {243, 252 }, {242, 253 }, {236, 253 }, {234, 252 }, {233, 250 }, {232, 248 }, {231, 247 }, {224, 247 }, {224, 251 }, {225, 253 }, {227, 256 }, {229, 258 }, {232, 259 }, {233, 260 }, {236, 260 }, {236, 261 }, {243, 261 }, {245, 260 }, {247, 259 }, {248, 258 }, {250, 256 }, {252, 254 }, {253, 252 }, {254, 251 }, {254, 243 }, {253, 240 }, {249, 237 }, {246, 236 }, {242, 235 }, {238, 234 }, {234, 233 }, {232, 231 }, {232, 227 }, {234, 225 }, {237, 225 }, {242, 225 }, {244, 227 }, {246, 229 }, {246, 231 }, {253, 231 }, } } ,\
{ 13, {  {261, 219 }, {261, 260 }, {291, 260 }, {291, 252 }, {269, 252 }, {269, 241 }, {289, 241 }, {289, 234 }, {269, 234 }, {269, 226 }, {290, 226 }, {290, 219 }, {261, 219 }, } } ,\
{ 37, {  {300, 260 }, {300, 219 }, {324, 219 }, {326, 220 }, {328, 221 }, {329, 223 }, {330, 224 }, {330, 226 }, {330, 235 }, {329, 236 }, {327, 239 }, {325, 240 }, {327, 241 }, {329, 242 }, {330, 248 }, {329, 255 }, {330, 250 }, {330, 256 }, {331, 257 }, {331, 259 }, {323, 259 }, {323, 260 }, {331, 260 }, {323, 260 }, {322, 246 }, {319, 244 }, {307, 244 }, {307, 238 }, {320, 238 }, {324, 234 }, {324, 230 }, {324, 227 }, {322, 226 }, {320, 224 }, {306, 225 }, {307, 260 }, {300, 260 }, } } }}
#define F { 1, {{ 21, {{426, 260 }, {426, 236 }, {423, 236 }, {423, 229 }, {426, 230 }, {426, 222 }, {428, 220 }, {430, 219 }, {432, 218 }, {437, 218 }, {437, 225 }, {434, 225 }, {433, 225 }, {432, 227 }, {432, 229 }, {433, 230 }, {436, 229 }, {436, 230 }, {436, 235 }, {432, 235 }, {433, 260 }, } } }}
#define G { 1, {{ 66, {  {519, 261 }, {519, 265 }, {520, 267 }, {523, 269 }, {525, 270 }, {526, 271 }, {530, 271 }, {534, 271 }, {536, 270 }, {539, 268 }, {541, 267 }, {542, 264 }, {543, 261 }, {543, 230 }, {536, 230 }, {536, 232 }, {534, 230 }, {532, 230 }, {529, 230 }, {527, 230 }, {525, 230 }, {524, 230 }, {522, 231 }, {521, 233 }, {520, 236 }, {518, 238 }, {518, 242 }, {518, 244 }, {525, 244 }, {525, 239 }, {528, 236 }, {530, 235 }, {531, 235 }, {533, 236 }, {534, 238 }, {535, 239 }, {536, 240 }, {536, 243 }, {536, 249 }, {534, 251 }, {533, 252 }, {530, 253 }, {527, 252 }, {525, 250 }, {525, 247 }, {525, 244 }, {518, 244 }, {518, 250 }, {519, 252 }, {521, 255 }, {522, 257 }, {524, 258 }, {526, 259 }, {529, 259 }, {532, 259 }, {534, 258 }, {535, 257 }, {536, 255 }, {536, 261 }, {534, 263 }, {532, 264 }, {529, 264 }, {527, 264 }, {526, 263 }, {526, 261 }, {525, 261 }, } } }}
#define BEGIN { 5, {{ 51, {{597, 218 }, {597, 259 }, {620, 259 }, {626, 255 }, {627, 253 }, {628, 251 }, {628, 248 }, {628, 247 }, {620, 247 }, {619, 249 }, {618, 251 }, {616, 251 }, {613, 252 }, {605, 252 }, {605, 241 }, {616, 241 }, {618, 241 }, {619, 242 }, {619, 244 }, {620, 247 }, {628, 247 }, {628, 242 }, {627, 240 }, {625, 239 }, {623, 238 }, {623, 237 }, {623, 236 }, {625, 235 }, {627, 232 }, {627, 229 }, {627, 225 }, {625, 223 }, {623, 220 }, {619, 219 }, {617, 219 }, {613, 219 }, {613, 226 }, {616, 226 }, {617, 227 }, {618, 228 }, {619, 229 }, {619, 232 }, {618, 232 }, {616, 233 }, {614, 233 }, {611, 233 }, {605, 233 }, {605, 225 }, {613, 226 }, {613, 219 }, {597, 219 }, } } ,\
{ 12, {  {637, 259 }, {666, 259 }, {666, 252 }, {644, 252 }, {644, 241 }, {663, 241 }, {663, 235 }, {644, 235 }, {644, 226 }, {665, 226 }, {665, 219 }, {637, 219 }, } } ,\
{ 43, {  {691, 237 }, {706, 237 }, {706, 260 }, {701, 259 }, {701, 254 }, {700, 256 }, {697, 258 }, {695, 260 }, {690, 260 }, {683, 260 }, {681, 259 }, {677, 256 }, {675, 252 }, {673, 248 }, {671, 243 }, {672, 232 }, {672, 230 }, {675, 225 }, {678, 222 }, {680, 220 }, {685, 218 }, {690, 218 }, {696, 218 }, {699, 219 }, {702, 222 }, {704, 225 }, {705, 227 }, {706, 232 }, {699, 232 }, {696, 227 }, {693, 225 }, {690, 225 }, {685, 225 }, {683, 227 }, {680, 230 }, {679, 238 }, {681, 247 }, {683, 250 }, {688, 252 }, {695, 252 }, {698, 249 }, {700, 244 }, {691, 244 }, } } ,\
{ 5, {  {714, 219 }, {714, 260 }, {722, 260 }, {722, 219 }, {714, 219 }, } } ,\
{ 10, {  {730, 260 }, {730, 219 }, {738, 219 }, {753, 242 }, {753, 219 }, {761, 219 }, {761, 260 }, {753, 260 }, {737, 230 }, {737, 260 }, } } }}
#define GR { 1, {{ 50, {{901, 237 }, {916, 237 }, {916, 260 }, {910, 259 }, {910, 254 }, {903, 260 }, {900, 261 }, {894, 261 }, {889, 259 }, {887, 257 }, {885, 255 }, {883, 251 }, {881, 248 }, {880, 243 }, {880, 234 }, {881, 228 }, {883, 226 }, {886, 222 }, {890, 219 }, {893, 218 }, {899, 217 }, {905, 217 }, {907, 219 }, {910, 221 }, {912, 223 }, {914, 226 }, {915, 228 }, {915, 232 }, {908, 232 }, {907, 229 }, {905, 226 }, {904, 225 }, {900, 224 }, {895, 225 }, {893, 226 }, {891, 228 }, {889, 230 }, {889, 233 }, {888, 236 }, {888, 244 }, {890, 247 }, {892, 250 }, {893, 252 }, {898, 253 }, {902, 252 }, {906, 251 }, {908, 247 }, {909, 244 }, {901, 244 }, {901, 237 }, } } }}
#define RAD {3, {{ 37, {{924, 260 }, {924, 218 }, {945, 218 }, {948, 219 }, {952, 222 }, {954, 225 }, {955, 230 }, {955, 233 }, {953, 236 }, {951, 238 }, {949, 239 }, {949, 240 }, {951, 241 }, {952, 242 }, {954, 245 }, {954, 256 }, {956, 258 }, {955, 259 }, {947, 259 }, {946, 257 }, {946, 245 }, {943, 243 }, {938, 243 }, {933, 243 }, {933, 237 }, {943, 237 }, {946, 236 }, {947, 233 }, {947, 228 }, {946, 226 }, {943, 225 }, {932, 225 }, {932, 237 }, {933, 237 }, {933, 243 }, {932, 243 }, {932, 260 }, } } , \
{ 14, {  {960, 259 }, {974, 218 }, {982, 218 }, {997, 260 }, {988, 260 }, {985, 251 }, {972, 251 }, {974, 243 }, {983, 244 }, {978, 228 }, {974, 243 }, {972, 251 }, {968, 260 }, {960, 260 }, } } , \
{ 23, {  {1002, 218 }, {1002, 260 }, {1024, 260 }, {1029, 257 }, {1033, 252 }, {1035, 247 }, {1035, 233 }, {1033, 228 }, {1032, 224 }, {1029, 222 }, {1026, 220 }, {1024, 219 }, {1021, 218 }, {1010, 218 }, {1010, 252 }, {1021, 252 }, {1026, 247 }, {1027, 235 }, {1023, 228 }, {1020, 226 }, {1010, 226 }, {1010, 218 }, {1002, 218 }, } } }}
#define DMY { 4, {{ 21, {{1071, 219 }, {1071, 260 }, {1078, 260 }, {1078, 226 }, {1089, 226 }, {1092, 227 }, {1095, 232 }, {1095, 245 }, {1092, 249 }, {1090, 251 }, {1078, 252 }, {1078, 260 }, {1092, 260 }, {1095, 258 }, {1099, 253 }, {1102, 248 }, {1103, 237 }, {1102, 228 }, {1098, 222 }, {1093, 219 }, {1089, 219 }, } } , \
{ 8, {  {1109, 251 }, {1109, 259 }, {1109, 260 }, {1116, 260 }, {1117, 259 }, {1117, 251 }, {1116, 251 }, {1109, 250 }, } } , \
{ 13, {  {1122, 260 }, {1122, 218 }, {1134, 218 }, {1143, 240 }, {1152, 218 }, {1164, 218 }, {1164, 260 }, {1155, 260 }, {1155, 235 }, {1147, 260 }, {1140, 260 }, {1130, 234 }, {1131, 260 }, } } , \
{ 12, {  {1170, 218 }, {1170, 221 }, {1184, 244 }, {1184, 260 }, {1191, 260 }, {1191, 243 }, {1204, 220 }, {1204, 218 }, {1195, 218 }, {1188, 232 }, {1180, 218 }, {1170, 218 }, } } }}
#define CC { 1, {{ 45, {{1296, 246 }, {1304, 246 }, {1305, 249 }, {1303, 251 }, {1301, 253 }, {1300, 256 }, {1296, 259 }, {1292, 261 }, {1289, 261 }, {1284, 261 }, {1279, 259 }, {1275, 255 }, {1272, 251 }, {1270, 246 }, {1269, 242 }, {1269, 233 }, {1270, 228 }, {1274, 224 }, {1278, 221 }, {1282, 218 }, {1286, 217 }, {1290, 217 }, {1294, 218 }, {1298, 220 }, {1300, 223 }, {1302, 226 }, {1303, 228 }, {1304, 232 }, {1301, 232 }, {1295, 231 }, {1293, 226 }, {1289, 225 }, {1285, 224 }, {1283, 226 }, {1281, 228 }, {1278, 231 }, {1278, 236 }, {1277, 242 }, {1278, 246 }, {1280, 249 }, {1283, 251 }, {1286, 253 }, {1290, 253 }, {1292, 252 }, {1294, 250 }, } } }}
#define PRGM { 4, {{ 24, {{1369, 260 }, {1369, 218 }, {1378, 218 }, {1378, 238 }, {1387, 238 }, {1390, 237 }, {1392, 234 }, {1392, 229 }, {1391, 227 }, {1386, 226 }, {1378, 226 }, {1378, 218 }, {1388, 218 }, {1392, 219 }, {1396, 222 }, {1398, 226 }, {1399, 231 }, {1399, 237 }, {1397, 240 }, {1394, 243 }, {1391, 245 }, {1386, 245 }, {1377, 245 }, {1377, 260 }, } } ,\
{ 34, {  {1406, 260 }, {1406, 218 }, {1429, 218 }, {1433, 220 }, {1435, 222 }, {1438, 228 }, {1438, 232 }, {1436, 236 }, {1433, 239 }, {1432, 240 }, {1435, 242 }, {1436, 244 }, {1436, 250 }, {1436, 253 }, {1437, 257 }, {1438, 258 }, {1438, 259 }, {1436, 259 }, {1429, 259 }, {1429, 247 }, {1426, 243 }, {1416, 243 }, {1416, 236 }, {1425, 236 }, {1427, 233 }, {1428, 229 }, {1426, 227 }, {1423, 226 }, {1415, 226 }, {1414, 236 }, {1416, 236 }, {1416, 243 }, {1414, 243 }, {1414, 260 }, } } ,\
{ 45, {  {1462, 237 }, {1478, 237 }, {1478, 260 }, {1472, 260 }, {1472, 254 }, {1469, 257 }, {1469, 259 }, {1464, 261 }, {1459, 261 }, {1456, 261 }, {1452, 261 }, {1450, 259 }, {1447, 255 }, {1445, 254 }, {1443, 250 }, {1442, 247 }, {1442, 244 }, {1442, 234 }, {1443, 229 }, {1445, 225 }, {1449, 220 }, {1455, 217 }, {1459, 217 }, {1464, 217 }, {1467, 217 }, {1472, 220 }, {1476, 225 }, {1478, 232 }, {1469, 232 }, {1467, 227 }, {1464, 225 }, {1457, 225 }, {1454, 227 }, {1452, 231 }, {1450, 236 }, {1450, 241 }, {1451, 245 }, {1452, 250 }, {1457, 251 }, {1460, 253 }, {1466, 252 }, {1469, 249 }, {1470, 246 }, {1470, 244 }, {1462, 244 }, } } ,\
{ 13, {  {1486, 260 }, {1486, 218 }, {1497, 218 }, {1506, 241 }, {1515, 218 }, {1527, 218 }, {1527, 260 }, {1519, 260 }, {1519, 237 }, {1510, 260 }, {1502, 259 }, {1494, 236 }, {1494, 260 }, } } }}

TSeg const table[26*4]=
{
N, UL(1),  U(1),  U(2), UL(2), UR(2), UL(3),  U(3),  U(4), UL(4), UR(4), UL(5),  U(5),  U(6), UL(6), UR(6), UL(7),  U(7),  U(8), UL(8), UR(8), UL(9),  U(9),  U(10), UL(10), UR(10),
N, BL(1),  M(1), UR(1), BL(2),  M(2), BL(3),  M(3), UR(3), BL(4),  M(4), BL(5),  M(5), UR(5), BL(6),  M(6), BL(7),  M(7), UR(7), BL(8),  M(8), BL(9),  M(9), UR(9), BL(10), M(10),
N,  B(1), BR(1),  B(2), BR(2),  D(2),  B(3), BR(3),  B(4), BR(4),  D(4),  B(5), BR(5),  B(6), BR(6),  D(6),  B(7), BR(7),  B(8), BR(8),  D(8),  B(9), BR(9),  B(10), BR(10),  D(10), 
//STAR, M(-1), C(1), D(1), USER, C(2), F, C(3), D(3), G, C(4), N, C(5), D(5), GR, C(6), N, C(7), D(7), N, C(8), CC, C(9), D(9), N, C(10)
STAR, M(0), C(1), D(1), USER, C(2), F, C(3), D(3), G, C(4), BEGIN, C(5), D(5), GR, C(6), RAD, C(7), D(7), DMY, C(8), CC, C(9), D(9), PRGM, C(10),
};
#undef U
#undef UR
#undef BR
#undef B
#undef BL
#undef UL
#undef M
#undef C
#undef D
#undef STAR
#undef F
#undef G
#undef BEGIN
#undef GR
#undef RAD
#undef CC
#undef PRGM

bool scron= true;

void UpdateScreenContent()
{
	unsigned long long *e= (unsigned long long *)AT91C_SLCDC_MEM;

	//  for (int i= 0; i<10; i++) e[i]= ~0LL;

	HBRUSH b= CreateSolidBrush(VIRTUAL_LCD_COLOR);
	RECT r={0, 0, CLPWidth, CLPHeight};
	FillRect(g_pLCD->m_hMemDC, &r, b);

	RECT r1={0, 0, LCDWidth, LCDHeight};
	FillRect(g_pLCD->m_hMyDC, &r1, b);
	
	DeleteObject(b);
  ATLTRACE2("DISP Event scr:%s\r\n", scron?"on":"off");
  if (scron)
	  for (int r=0; r<4; r++){
		  for (int c=0; c<26; c++){
			  if ((e[r]&(1LL<<c))!=0LL)	
        {
				  for (int n=0; n<table_LCD[r*26+c].nbPoly; n++){
					  //For CopyToClipboard feature
					  SetPolyFillMode(g_pLCD->m_hMemDC, WINDING);
					  Polygon(g_pLCD->m_hMemDC, &table[r*26+c].poly[n].points[0], table[r*26+c].poly[n].nbPoints);
					  //For LCD emulation
					  SetPolyFillMode(g_pLCD->m_hMyDC, WINDING);
					  Polygon(g_pLCD->m_hMyDC, &table_LCD[r*26+c].poly[n].points[0], table_LCD[r*26+c].poly[n].nbPoints);
				  }  
			  }
		  }
	  }
	g_pLCD->hpFinish();
}

bool StillBlinking= false;

void On0p5secondTimer()
{
  if (!StillBlinking) return;
  scron= !scron;
	UpdateScreenContent();
}

void WindowsBlink(bool blink)
{
  if (StillBlinking==blink) return;
  StillBlinking= blink;
	if (blink)
	{
		g_pLCD->hpStartTimerBlinkCur();
  } else { g_pLCD->hpStopTimerBlinkCur(); scron= true; }
}